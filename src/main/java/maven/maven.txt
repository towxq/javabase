Maven是Apache软件基金会唯一维护的一款自动化构建工具，专注于服务Java平台的项目构建和依赖管理。

Maven可以干啥：
    1,添加第三方jar包
    2,jar包之间的依赖关系： Maven 可以替我们自动的将当前 jar 包所依赖的其他所有 jar 包全部导入进来
    3,获取第三方jar包： Maven 提供了一个完全统一规范的 jar 包管理体系，只需要在项目中以坐标的方式依赖一个 jar 包，Maven 就会自动从中央仓库进行下载到本地仓库
    4,将项目拆分成多个工程模块
    5,构建项目（打包，编译等）

清理（clean）：删除以前的编译结果，为重新编译做好准备
编译（compile）：将Java 源程序编译为字节码文件
测试（test）：针对项目中的关键点进行测试，确保项目在迭代开发过程中关键点的正确性
报告：在每一次测试后以标准的格式记录和展示测试结果
打包（package）：将一个包含诸多文件的工程封装为一个压缩文件用于安装或部署。Java 工程对应 jar 包，Web工程对应 war 包。
安装（install）：在 Maven 环境下特指将打包的结果——jar 包或 war 包安装到本地仓库中。
部署（deploy）：将打包的结果部署到远程仓库或将 war 包部署到服务器上运行。

依赖的范围
    compile：默认范围，编译测试运行都有效
    provided：在编译和测试时有效
    runtime：在测试和运行时有效
    test：只在测试时有效
    system：在编译和测试时有效，与本机系统关联，可移植性差

依赖的排除
    <dependency>
        <groupId>net.lazyegg.maven</groupId>
        <artifactId>Hello</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <scope>compile</scope>
        <exclusions>
    	<exclusion>
    	<groupId>commons-logging</groupId>
    	<artifactId>commons-logging</artifactId>
    	</exclusion>
    	</exclusions>
    </dependency>

依赖的原则：解决 jar 包冲突
    路径最短者优先
    路径相同时先声明者优先
