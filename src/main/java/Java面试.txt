
Java集合：HashMap和ConcurrentHashMap，平时最好有读一些源码，最好知道每个参数为什么设置成这么大？有什么好处？
JUC包肯定要学，即使平时的编程根本不用，也必须得会。至少要知道aba，cas，aqs，unsafe，volatile，sync，以及常见的各种lock，死锁，线程池参数等，
也必须要明白自旋，阻塞，死锁和它如何去定位，oom如何定位问题，cpu过高如何定位等基本的操作，你可以没有生产调试经验，
但不代表你可以不会top，jps，jstack，jmap这些可能会问的东西。以及可能衍生的jmm模型和mesi协议等。
大厂必问JVM：垃圾回收算法，垃圾收集器、JVM内存模型，每个区域用途，各种oom的种类，jvm调优经验，类加载过程，双亲委派等。
Spring就得抽空看源码了，一般会问到bean的生命周期，如何解决循环依赖，实现事务原理，动态代理原理等。
Dubbo也是必须问的，设计框架，负载均衡。
Redis更要多懂一点，单线程模型，aof，rdb，rewrite，主从，cluster，哪些类型？包含一些缓存常见的问题击穿、穿透、雪崩、数据一致性等。
Mysql，事务，锁，索引，b+树，主从这些你必须会
Mq ，我用的rocketmq，你得知道为什么用，重复消费，顺序消息，事务消息，高可用，消息丢失，挤压场景，整个消息发送消费的流程，读过源码更佳，更好吹
Netty的话，零拷贝，bio，nio，aio，架构设计怎么样子的？用过看过更好
算法，建议去刷题，我运气好，简单的算法让我碰到了，一些快排，堆排，二叉树相关的，链表反转，成环，环节点，跳楼梯等常规的简单算法建议刷刷，双指针，dp，递归这些还是多找找感觉，
大数据内存有限的场景的统计，有时间一些middle可以去试试，手写红黑树你要是可以，那我估计算法你稳了。
网络，http，tcp，https，udp，7层网络协议等，最好结合自己理解，背，你都要背下来。
还有就是一些分布式事务实现，架构实现，比如抢红包，高并发下单等常规的场景设计，你来设计，你怎么去设计？多找一些大牛或者上网自己查，帮你看看有哪些漏洞，有那些解决方案？业界有哪些好的中间件？


阿里一面：

自我介绍、自己做的项目和技术领域
说一下sync的底层实现，锁优化，和lock的对比
讲一下JVM参数调优详细过程
为什么这么设置？好处是什么？描述gc场景，如何去分析gc日志？
redis数据结构，使用场景，微博场景使用redis如何去设计用户关系？
线程池参数设定，为什么这么设定，作用？7大参数
spring的循环依赖如何解决？为什么要三级缓存？
优先级队列的底层原理？
阿里二面：

自我介绍一下吧
聊项目
结合你项目问你如何设计，提出漏洞，你怎么解决？如何改进，万一挂了？加一台机器有没有问题？如果我非要不出问题怎么办？
高并发下单扣库存场景如何设计
rocketMQ架构设计原理
Dubbo框架实现原理
最近读了什么书？平时怎么学习？
常用的负载均衡，该怎么用，你能说下吗？
阿里三面：

这一面主要问项目，给你的压力感比较强
结合项目问，为什么这么设计？让你去优化，你怎么优化，引导你用一个合理的更好的方式去优化，数据库的设计等
在公司做了什么事情，各个系统业务线都是做什么的，你的绩效，手写算法链表反转？
阿里四面：

JVM的主要组成部分及其作用？
JVM运行时数据区包含哪些？
JVM垃圾回收机制，何时触发MinorGC等操作
JVM的垃圾回收算法：
JVM 调优的工具？
常用的JVM调优参数？
堆栈的区别？
详细介绍一下 CMS 垃圾回收器？
怎么判断对象是否可以被回收？
新生代垃圾回收器和老生代垃圾回收器都有哪些？有什么区别？
java类加载过程?
把你知道的中间件都说一下吧（瞬间懵了一下）
HR面：

为什么来阿里？
之前没考虑过阿里吗？
毕业这么久了，你觉得自己最大的改变是什么？
用一句话总结一下自己


线程池，SYNC和Lock锁机制、线程通信、volatile、ThreadLocal、CyclicBarrier、Atom包、CountDownLatch、AQS、CAS原理内存模型
GC垃圾回收，包括分代，GC算法，收集器、类加载和双亲委派、JVM调优，内存泄漏和内存溢出反射和代理、异常、
Java8相关、序列化 servlet、cookie session、Spring AOP、IOC、MVC、事务、动态代理、Mybatis、Tomcat等等相关知识服务发现、治理等，
分布式、dubbo、springcloud微服务原理、kafka，activeMQ，rocketMQ



商品30万
6000万  60万单
线上 800多万  4万单
58万会员
付费会员4000 
线上周转 70
门店周转  80
