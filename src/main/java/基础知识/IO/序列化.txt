Java序列化
    　  把对象转换为字节序列的过程称为对象的 序列化。
    　　把字节序列恢复为对象的过程称为对象的 反序列化。

    　　对象的序列化主要有两种用途：
    　　1） 把对象的字节序列永久地保存到硬盘上，通常存放在一个文件中；
    　　2） 在网络上传送对象的字节序列。

        s​e​r​i​a​l​V​e​r​s​i​o​n​U​I​D​:​ ​字​面​意​思​上​是​序​列​化​的​版​本​号​，凡是实现Serializable接口的类都有一个表示序列化版本标识符的静态变量
                          SerialVersionUID用于对象的版本控制。当您添加或修改类中的任何字段时，已经序列化的类将无法恢复，
                          因为serialVersionUID已为新类生成与旧的序列化对象将不同。Java序列化过程依赖于正确的serialVersionUID恢复序列化对象的状态，
                          并在serialVersionUID不匹配时抛出java.io.InvalidClassException 异常。


            显式地定义serialVersionUID有两种用途：
        　　　　1、 在某些场合，希望类的不同版本对序列化兼容，因此需要确保类的不同版本具有相同的serialVersionUID；
        　　　　2、 在某些场合，不希望类的不同版本对序列化兼容，因此需要确保类的不同版本具有不同的serialVersionUID。

        Transient 关键字
            transient修饰符仅适用于变量，不适用于方法和类。在序列化时，如果我们不想序列化特定变量以满足安全约束，那么我们应该将该变量声明为transient。
            执行序列化时，JVM会忽略transient变量的原始值并将默认值保存到文件中。因此，transient意味着不要序列化。